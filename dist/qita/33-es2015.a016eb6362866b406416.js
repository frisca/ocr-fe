(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{"6YW1":function(e,o,t){"use strict";t.r(o);var n=t("mrSG"),s=t("8Y7J"),r=t("SVse"),i=t("iInd"),l=t("s7LF"),a=t("PSD3"),d=t.n(a),c=t("vgbG"),p=t("T781"),h=t("XNiG");let f=class{constructor(e,o,t){this.fb=e,this.profileService=o,this.router=t,this.action=new h.a,this.cities=[],this.provinces=[],this.villages=[],this.districts=[],this.socialInterests=[],this.keyword="name",this.selectedDistrict="",this.selectedCity="",this.selectedVillage="",this.gender="",this.shwErrorGender=!1,this.shwErrorCvBahasa=!1,this.shwErrorAvatar=!1,this.kodePosID="",this.genders=[{id:"Female",text:"Female"},{id:"Male",text:"Male"}],this.sForm()}sForm(){this.sprofileForm=this.fb.group({id:[{value:"",disabled:!0}],firstName:["",l.g.required],lastName:["",l.g.required],phoneNumber:["",l.g.required],address:["",l.g.required],cvBahasa:["",l.g.required],cvEnglish:[""],avatar:["",l.g.required],birthDate:["",l.g.required],gender:["",l.g.required],activities:[""],license:[""],kodePos:["",l.g.required],socialInterest:[""]})}ngOnInit(){this.tProgress=0,this.getUser(),this.getCountUserProgress(),this.showForm=!1}getCountUserProgress(){this.profileService.getCountUserProgress().subscribe(e=>{console.log("res.body",e.body),this.successLoadCountUserProgress(e.body)})}successLoadCountUserProgress(e){console.log("succesloaduser ",e),this.countProgres=e.contents,this.tProgress=+this.countProgres/4*100,console.log("count progress: ",this.tProgress)}getUser(){this.profileService.getUserByID().subscribe(e=>{console.log("res.body",e.body),this.successLoadUser(e.body)})}successLoadUser(e){console.log("succesloaduser ",e),e.totalRow<0||(console.log(e),this.profile=e.contents,this.selectedDistrict=String(this.profile.kodePosID))}edit(e){this.profile=e,void 0!==this.profile&&(this.sprofileForm.get("gender").setValue(this.profile.gender),this.sprofileForm.get("avatar").setValue(this.profile.avatar),this.sprofileForm.get("cvBahasa").setValue(this.profile.cvBahasa)),""!==this.profile.birthDate&&(this.formattedDate=new Date(this.profile.birthDate),this.birthDates=this.formattedDate.toISOString().split("T")[0]),this.showForm=!0,console.log("gender: ",this.profile.gender),""!==this.profile.gender&&(this.sprofileForm.get("gender").setValue(this.profile.gender),this.gender=this.profile.gender)}onChangeZipCode(e){console.log("val: , ",e);const o=e;""!==o&&this.profileService.searchZipCode(o).subscribe(e=>{this.successLoadUserKodePos(e.body)})}changedCity(e){this.selectedDistrict=e.value,this.profileService.searchDistrict(this.selectedDistrict).subscribe(e=>{this.successLoadUserDistrict(e.body)}),this.profile.kodePosID=+this.selectedDistrict}successLoadUserDistrict(e){this.pos1=e.data,this.districts=[],this.cities=[],this.provinces=[];for(let o=0;o<this.pos1.length;o++)this.districts.push({id:this.pos1[o].id,text:this.pos1[o].kecamatan}),this.cities.push({id:this.pos1[o].id,text:this.pos1[o].kabupaten}),this.provinces.push({id:this.pos1[o].id,text:this.pos1[o].provinsi})}successLoadUserKodePos(e){this.pos1=e.data,this.cities=[],this.villages=[];for(let o=0;o<this.pos1.length;o++)this.villages.push({id:this.pos1[o].id,text:this.pos1[o].kelurahan}),this.cities.push({id:this.pos1[o].id,text:this.pos1[o].kabupaten}),""!==this.profile.kodePos.kelurahan&&this.pos1[o].id===this.profile.kodePosID&&(this.selectedVillage=String(this.profile.kodePosID),this.selectedDistrict=String(this.profile.kodePosID),this.selectedCity=String(this.profile.kodePosID));console.log("POS1: ",this.pos1),console.log("selectedDistrict: ",this.selectedDistrict," villages : ",this.selectedVillage)}formatDate(e){const o=new Date(e);let t=""+(o.getMonth()+1),n=""+o.getDate();const s=o.getFullYear();return t.length<2&&(t="0"+t),n.length<2&&(n="0"+n),[s,t,n].join("-")}batal(){this.showForm=!1,this.getUser()}processCVBahasa(e){this.cvBahasa=e.target.files[0];const o=this.cvBahasa.name.split(".");if("pdf"!==o[o.length-1])return d.a.fire("Failed","Extension file not pdf","error"),void this.sprofileForm.get("cvBahasa").setValue("");return this.cvBahasa.size/1024/1024>5?(d.a.fire("Failed","File size exceeds 5 MB","error"),void this.sprofileForm.get("cvBahasa").setValue("")):void 0}processCVEnglish(e){this.cvEnglish=e.target.files[0],console.log("cvEnglish: ",this.cvEnglish)}processAvatar(e){this.avatar=e.target.files[0];const o=this.avatar.name.split(".");if("png"!==o[o.length-1]&&"jpeg"!==o[o.length-1])return d.a.fire("Failed","Extension file not png","error"),void this.sprofileForm.get("avatar").setValue("");return this.avatar.size/1024/1024>5?(d.a.fire("Failed","File size exceeds 5 MB","error"),void this.sprofileForm.get("avatar").setValue("")):void 0}save(){this.profile.firstName=this.sprofileForm.get("firstName").value,this.profile.lastName=this.sprofileForm.get("lastName").value,this.profile.birthDate=this.sprofileForm.get("birthDate").value,this.profile.address=this.sprofileForm.get("address").value,this.profile.phoneNumber=this.sprofileForm.get("phoneNumber").value,this.profile.gender=this.sprofileForm.get("gender").value,this.profile.socialInterest=this.sprofileForm.get("socialInterest").value,console.log("this profile save: ",this.profile),this.profileService.add(this.profile).subscribe(e=>{console.log(e),"00"===e.body.errCode?(null!=this.cvBahasa&&this.cvBahasa&&(this.uploadFileCvBahasa(e.body.id),this.getUser(),this.getCountUserProgress()),null!=this.cvEnglish&&this.cvEnglish&&(this.uploadFileCvEnglish(e.body.id),this.getUser(),this.getCountUserProgress()),null!=this.avatar&&this.avatar&&(this.uploadFileAvatar(e.body.id),this.getUser(),this.getCountUserProgress()),this.showForm=!1,this.getUser(),this.getCountUserProgress(),d.a.fire("Success","Profile saved","success"),this.action.next("refresh"),window.location.reload(),this.router.navigate(["/user/profile"]),this.action.next("refresh")):d.a.fire("Failed","Profile not saved","error")})}editForm(){console.log("update ==> ",this.profile),this.profile.gender=this.gender,null!=this.cvBahasa&&this.cvBahasa&&console.log("sni"),0===this.profile.kodePosID&&(this.kodePosID=""),this.profileService.update(this.profile).subscribe(e=>{"00"===e.body.errCode?(null!=this.cvBahasa&&this.cvBahasa&&(this.uploadFileCvBahasa(this.profile.id),this.getUser(),this.getCountUserProgress()),null!=this.cvEnglish&&this.cvEnglish&&(this.uploadFileCvEnglish(this.profile.id),this.getUser(),this.getCountUserProgress()),null!=this.avatar&&this.avatar&&(this.uploadFileAvatar(this.profile.id),this.getUser(),this.getCountUserProgress()),this.showForm=!1,this.getUser(),this.getCountUserProgress(),d.a.fire("Success","Profile saved","success"),this.action.next("refresh")):d.a.fire("Failed","Profile not saved","error")})}uploadFileCvBahasa(e){const o=new FormData;o.append("files",this.cvBahasa),o.append("type","cv_bahasa"),o.append("id",String(e)),console.log("formData: ",o),this.profileService.upload(o).subscribe(e=>{"00"===e.body.errCode?this.getUser():d.a.fire("Failed","CV in Bahasa not saved","error")})}uploadFileCvEnglish(e){const o=new FormData;o.append("files",this.cvEnglish),o.append("type","cv_english"),o.append("id",String(e)),console.log("formData: ",o),this.profileService.upload(o).subscribe(e=>{"00"===e.body.errCode?this.getUser():d.a.fire("Failed","CV in English not saved","error")})}uploadFileAvatar(e){const o=new FormData;o.append("files",this.avatar),o.append("type","avatar"),o.append("id",String(e)),console.log("formData: ",o),this.profileService.upload(o).subscribe(e=>{"00"!==e.body.errCode&&d.a.fire("Failed","Avatar not saved","error"),this.getUser()})}download(e,o,t){const n=new c.b;n.id=e,n.typeFile=o,console.log("profile:",n),"cv_bahasa"===o&&(t="cv_bahasa_"+t),"cv_english"===o&&(t="cv_english_"+t),this.profileService.downloadCV(n).subscribe(e=>{if(console.log("data blob ==> ",e),"text/plain"===e.type)return void d.a.fire("File Not Found","Failed Download","error");const o=new Blob([e],{type:"application/text/pdf"}),n=document.createElement("a");n.href=URL.createObjectURL(o),n.download=t,document.body.append(n),n.click(),n.remove(),window.addEventListener("focus",e=>URL.revokeObjectURL(n.href),{once:!0})})}changedGender(e){console.log("e any: ",e),""===e.value&&(this.shwErrorGender=!0),this.shwErrorGender=!1,this.sprofileForm.get("gender").setValue(e.value),this.gender=e.value,console.log("gender: ",this.gender)}shwGender(e){console.log("gender: ",e.value),void 0===e.value&&(this.shwErrorGender=!0),this.shwErrorGender=!1}};f.ctorParameters=()=>[{type:l.a},{type:p.a},{type:i.f}],f=n.a([Object(s.Component)({selector:"app-profile",template:t("bS2z"),styles:[t("d9lw")]}),n.b("design:paramtypes",[l.a,p.a,i.f])],f);const g=[{path:"",component:f}];let b=class{};b=n.a([Object(s.NgModule)({imports:[i.h.forChild(g)],exports:[i.h]})],b);var v=t("ebz3"),m=t("G0yt"),u=t("hr0V"),y=t("Ezqk"),w=t("s7Le");t.d(o,"ProfileModule",(function(){return F}));let F=class{};F=n.a([Object(s.NgModule)({declarations:[f],imports:[r.CommonModule,b,v.a,m.c,l.c,m.h,u.Select2Module,y.a,w.a]})],F)},bS2z:function(e,o){e.exports='<div class="row">\n    <div class="col-sm-12">\n        <app-card [hidHeader]="true">\n          <h5>Progress</h5>\n          <hr>\n          <label for="progress">Progress Your Data: {{tProgress}} / 100%</label>\n          <div class="mb-12"><ngb-progressbar [showValue]="true" [value]="tProgress"></ngb-progressbar></div>\n        </app-card>\n    </div>\n\n    <div class="col-sm-12">\n      <app-card [hidHeader]="true">\n        <h5>Profile &nbsp;\n            <span class="feather icon-edit" style="font-size:16px;"\n                (click)="edit(profile)" *ngIf="!showForm">\n            </span>\n        </h5>\n        <hr>\n        <div class="row" *ngIf="!showForm">\n            <div class="col-md-6">\n                <table class="table">\n                    <tbody>\n                        <tr>\n                            <td style="border-top: none;width: 40%;">First Name</td>\n                            <td style="border-top: none;font-weight:bold;color:black;width:50%;" \n                            *ngIf="profile.firstName === \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.firstName !== \'\'">\n                                {{profile.firstName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style="border-top: none;">Phone Number</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.phoneNumber == \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.phoneNumber != \'\'">\n                                {{profile.phoneNumber}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style="border-top: none;">Gender</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.gender === \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.gender !== \'\'">\n                                {{profile.gender}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style="border-top: none;">Villages</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.kodePos.kelurahan === \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.kodePos.kelurahan !== \'\'">\n                                {{profile.kodePos.kelurahan}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style="border-top: none;">City</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.kodePos.kabupaten === \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.kodePos.kabupaten !== \'\'">\n                                {{profile.kodePos.kabupaten}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style="border-top: none;">Address</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.address === \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.address !== \'\'">\n                                {{profile.address}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style="border-top: none;">CV Bahasa</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.cvBahasa === \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.cvBahasa !== \'\'">\n                                <a class="feather icon-download" (click)="download(profile.id, \'cv_bahasa\', profile.cvBahasa)"> {{profile.cvBahasa}}\n                                </a> \n                            </td>\n                        </tr>\n                        <tr>\n                            <td style="border-top: none;">Social Interest</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.socialInterest == \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.socialInterest != \'\'">\n                                {{profile.socialInterest}}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class="col-md-6">\n                <table class="table">\n                    <tbody>\n                        <tr>\n                            <td style="border-top: none;width: 40%;">Last Name</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.lastName === \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.lastName !== \'\'">\n                                {{profile.lastName}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style="border-top: none;">Date of Birth</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.birthDate === \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.birthDate !== \'\'">\n                                {{profile.birthDate | date: \'dd/MM/yyyy\'}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style="border-top: none;">Zip Code</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.kodePos.kodePos === \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.kodePos.kodePos !== \'\'">\n                                {{profile.kodePos.kodePos}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style="border-top: none;">District</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.kodePos.kecamatan === \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.kodePos.kecamatan !== \'\'">\n                                {{profile.kodePos.kecamatan}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style="border-top: none;">Province</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.kodePos.provinsi === \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.kodePos.provinsi !== \'\'">\n                                {{profile.kodePos.provinsi}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style="border-top: none;">License/Certification</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.license === \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.license !== \'\'">\n                                {{profile.license}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style="border-top: none;">CV in English</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.cvEnglish === \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.cvEnglish !== \'\'">\n                                <a class="feather icon-download" (click)="download(profile.id, \'cv_english\', profile.cvEnglish)"> {{profile.cvEnglish}}\n                                </a> \n                            </td>\n                        </tr>\n                        <tr>\n                            <td style="border-top: none;">Avatar</td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.avatar === \'\'">\n                                -\n                            </td>\n                            <td style="border-top: none;font-weight:bold;\n                            color:black;width:50%;" *ngIf="profile.avatar !== \'\'">\n                                <img src="{{profile.avatar}}" style="width:100%">\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n        <form [formGroup]="sprofileForm" *ngIf="showForm">\n            <div class="row">\n                <div class="col-md-6">\n                    <div class="form-group">\n                        <label for="exampleInputFirstName">First Name\n                            <span style="color:red;">*</span>\n                        </label>\n                        <input type="text" class="form-control" id="exampleInputFirstName" \n                        aria-describedby="firstName" placeholder="Enter first name" \n                        [(ngModel)]="profile.firstName" formControlName="firstName">\n                        <div\n                            *ngIf="sprofileForm.controls[\'firstName\'].invalid && (sprofileForm.controls[\'firstName\'].dirty || \n                            sprofileForm.controls[\'firstName\'].touched)"\n                            >\n                            <span *ngIf="sprofileForm.controls[\'firstName\'].errors.required" class="text-danger">*\n                                First Name must be filled</span>\n                        </div>\n                    </div>\n                    <div class="form-group">\n                        <label for="exampleInputPhone">Phone Number\n                            <span style="color:red;">*</span>\n                        </label>\n                        <input type="text" class="form-control" id="exampleInputPhone" \n                        placeholder="Enter phone number" formControlName="phoneNumber" \n                        [(ngModel)]="profile.phoneNumber">\n                        <div\n                            *ngIf="sprofileForm.controls[\'phoneNumber\'].invalid && (sprofileForm.controls[\'phoneNumber\'].dirty || \n                            sprofileForm.controls[\'phoneNumber\'].touched)"\n                            >\n                            <span *ngIf="sprofileForm.controls[\'phoneNumber\'].errors.required" class="text-danger">*\n                                Phone Number must be filled</span>\n                        </div>\n                    </div>\n                    <div class="form-group">\n                        <label for="exampleInputGender">Gender\n                            <span style="color:red;">*</span>\n                        </label>\n                        <select2 [data]="genders" [cssImport]=true width="100%" \n                            style="width: 100%;" [value]="gender" (valueChanged)="changedGender($event)"\n                            [options]="{ placeholder: \'Choose Gender\' }" (click)="shwGender($event)">\n                        </select2>\n                        <div\n                            *ngIf="shwErrorGender"\n                            >\n                            <span class="text-danger">*\n                                Gender must be filled</span>\n                        </div>\n                    </div>\n                    <div class="form-group">\n                        <label for="exampleInputCity">Villages\n                            <span style="color:red;">*</span>\n                        </label>\n                        <select2 [data]="villages" [cssImport]=true width="100%" \n                            style="width: 100%;" (valueChanged)="changedCity($event)"\n                            [value]="selectedCity"\n                            [options]="{ placeholder: \'Choose Villages\' }">\n                        </select2>\n                    </div>\n                    <div class="form-group">\n                        <label for="exampleInputCity">City\n                            <span style="color:red;">*</span>\n                        </label>\n                        <select2 [data]="cities" [cssImport]=true width="100%" \n                            style="width: 100%;" [value]="selectedVillages"\n                            [options]="{ placeholder: \'Choose City\' }" [disabled]="true">\n                        </select2>\n                    </div>\n                    <div class="form-group">\n                        <label for="exampleFormControlAddress">Address\n                            <span style="color:red;">*</span>\n                        </label>\n                        <textarea class="form-control" id="exampleFormControlAddress" rows="3"\n                        formControlName="address" [(ngModel)]="profile.address" placeholder="Enter address"></textarea>\n                        <div\n                            *ngIf="sprofileForm.controls[\'address\'].invalid && (sprofileForm.controls[\'address\'].dirty || \n                            sprofileForm.controls[\'address\'].touched)"\n                            >\n                            <span *ngIf="sprofileForm.controls[\'address\'].errors.required" class="text-danger">*\n                                Address must be filled</span>\n                        </div>\n                    </div>\n                    <div class="form-group">\n                        <label for="exampleInputBahasa">CV Bahasa\n                            <span style="color:red;">*</span>\n                        </label>\n                        <div class="custom-file">\n                            \x3c!-- <input type="file" class="custom-file-input" id="validatedCustomFile" required>\n                            <label class="custom-file-label" for="validatedCustomFile">Choose file...</label> --\x3e\n                            <input type="file" class="form-control" id="exampleInputBahasa" \n                            (change)="processCVBahasa($event)" formControlName="cvBahasa">\n                        </div>\n                        <div\n                            *ngIf="sprofileForm.controls[\'cvBahasa\'].invalid && (sprofileForm.controls[\'cvBahasa\'].dirty || \n                            sprofileForm.controls[\'cvBahasa\'].touched)"\n                            >\n                            <span *ngIf="sprofileForm.controls[\'cvBahasa\'].errors.required" class="text-danger">*\n                                CV Bahasa must be filled</span>\n                        </div>\n                        \n                        <div *ngIf="profile.cvBahasa != \'\' " class="md-form">\n                            <a class="feather icon-download" (click)="download(profile.id, \'cv_bahasa\', profile.cvBahasa)"> {{profile.cvBahasa}}\n                            </a>\n                        </div>\n                    </div>\n                    <div class="form-group">\n                        <label for="exampleFormControlAddress">Social Interest\n                        </label>\n                        <textarea class="form-control" id="exampleFormControlSocialInterest" rows="3"\n                        formControlName="socialInterest" [(ngModel)]="profile.socialInterest" placeholder="Enter social interest"></textarea>\n                    </div>\n                </div>\n                <div class="col-md-6">\n                    <div class="form-group">\n                        <label for="exampleInputLastName">Last Name\n                            <span style="color:red;">*</span>\n                        </label>\n                        <input type="text" class="form-control" id="exampleInputLastName" \n                        aria-describedby="lastName"  placeholder="Enter last name" formControlName="lastName"\n                        [(ngModel)]="profile.lastName" >\n                        <div\n                            *ngIf="sprofileForm.controls[\'lastName\'].invalid && (sprofileForm.controls[\'lastName\'].dirty || \n                            sprofileForm.controls[\'lastName\'].touched)"\n                            >\n                            <span *ngIf="sprofileForm.controls[\'lastName\'].errors.required" class="text-danger">*\n                                Last Name must be filled</span>\n                        </div>\n                    </div>\n                    <div class="form-group">\n                        <label for="exampleInputBirthDate">Date of Birth\n                            <span style="color:red;">*</span>\n                        </label>\n                        <input type="date" class="form-control" id="exampleInputBirthDate" \n                        aria-describedby="birthDate"  placeholder="Enter birth of date" \n                        formControlName="birthDate" [(ngModel)]="birthDates">\n                        <div\n                            *ngIf="sprofileForm.controls[\'birthDate\'].invalid && (sprofileForm.controls[\'birthDate\'].dirty || \n                            sprofileForm.controls[\'birthDate\'].touched)"\n                            >\n                            <span *ngIf="sprofileForm.controls[\'birthDate\'].errors.required" class="text-danger">*\n                                Date of Birth must be filled</span>\n                        </div>\n                    </div>\n                    <div class="form-group">\n                        <label for="exampleInputZipCode">Zip Code\n                            <span style="color:red;">*</span>\n                        </label>\n                        <input type="text" class="form-control" id="exampleInputZipCode" \n                        aria-describedby="zipCode"  placeholder="Enter zip code" \n                        formControlName="kodePos" [(ngModel)]="profile.kodePos.kodePos" \n                        (ngModelChange)="onChangeZipCode($event)">\n                    </div>\n                    <div class="form-group">\n                        <label for="exampleInputCity">District\n                            <span style="color:red;">*</span>\n                        </label>\n                        <select2 [data]="districts" [cssImport]=true width="100%" \n                            style="width: 100%;" [value]="selectedDistrict"\n                            [options]="{ placeholder: \'Choose District\' }" [disabled]="true">\n                        </select2>\n                    </div>\n                    <div class="form-group">\n                        <label for="exampleInputProvince">Province\n                            <span style="color:red;">*</span>\n                        </label>\n                        <select2 [data]="provinces" [cssImport]=true width="100%" \n                            style="width: 100%;" [value]="selectedProvince"\n                            [options]="{ placeholder: \'Choose Province\' }" [disabled]="true">\n                        </select2>\n                    </div>\n                    <div class="form-group">\n                        <label for="exampleFormControlLicens">License / Certification\n                        </label>\n                        <textarea class="form-control" id="exampleFormControlLicens" rows="3"\n                        formControlName="license" [(ngModel)]="profile.license" \n                        placeholder="Enter license"></textarea>\n                        <div\n                            *ngIf="sprofileForm.controls[\'license\'].invalid && (sprofileForm.controls[\'license\'].dirty || \n                            sprofileForm.controls[\'license\'].touched)"\n                            >\n                        </div>\n                    </div>\n                    <div class="form-group">\n                        <label for="exampleInputCvEnglish">CV English</label>\n                        <input type="file" class="form-control" id="exampleInputCvEnglish" \n                        (change)="processCVEnglish($event)" formControlName="cvEnglish">\n                        <div *ngIf="profile.cvEnglish != \'\' " class="md-form">\n                            <a class="feather icon-download" (click)="download(profile.id, \'cv_english\', profile.cvEnglish)"> {{profile.cvEnglish}}\n                            </a>\n                        </div>\n                    </div>\n                    <div class="form-group">\n                        <label for="exampleInputPhone">Avatar\n                            <span style="color:red;">*</span>\n                        </label>\n                        <input type="file" class="form-control" id="exampleInputAvatar" \n                        (change)="processAvatar($event)" formControlName="avatar">\n                    </div>\n                    <div\n                        *ngIf="sprofileForm.controls[\'avatar\'].invalid && (sprofileForm.controls[\'avatar\'].dirty || \n                        sprofileForm.controls[\'avatar\'].touched)"\n                        >\n                        <span *ngIf="sprofileForm.controls[\'avatar\'].errors.required" class="text-danger">*\n                            Avatar be filled</span>\n                    </div>\n                    <div *ngIf="profile.avatar != \'\' " class="md-form">\n                        <img src="{{profile.avatar}}" style="width:100%">\n                    </div>\n                </div>\n\x3c!-- \n                <div class="col-md-12">\n                    <div class="form-group">\n                        <span style="color:red;"><i>* must be filled</i></span>\n                    </div>\n                </div> --\x3e\n\n                <div class="col-md-12">\n                    <button type="button" class="btn btn-primary" (click)="save()" *ngIf="profile.id == 0"\n                    [disabled]="sprofileForm.invalid">Save</button>\n                    <button type="button" class="btn btn-primary" (click)="editForm()" *ngIf="profile.id != 0"\n                    [disabled]="sprofileForm.invalid">Save</button> &nbsp;&nbsp;\n                    <button type="button" class="btn btn-light" (click)="batal()">Cancel</button>\n                </div>\n            </div>\n        </form>\n      </app-card>\n    </div>\n</div>\n  '},d9lw:function(e,o){e.exports=":host /deep/ mdb-select>div>div.single>div.placeholder {\n    font-size: 13px;\n}\n\n:host /deep/ mdb-select>div>div.single>div.value {\n    font-size: 13px;\n}\n\n:host /deep/ mdb-select>div>div.single>div.placeholder {\n    font-size: 13px;\n}\n\n:host /deep/ mdb-select>div>div.single>div.value {\n    font-size: 13px;\n}\n\n:host /deep/ .select2-container--default .select2-selection--single .select2-selection__arrow {\n    height: 34px;\n}\n\n/* :host /deep/ .select2-container {\n    width: 100%;\n} */\n\n:host .select2-container {\n    width: 100%;\n}\n\n:host /deep/ .select2-container--default .select2-selection--single {\n    height: 36px;\n}\n\n:host /deep/ .select2-container--default .select2-selection--single .select2-selection__rendered {\n    line-height: 34px;\n}\n\n:host /deep/ .autocomplete-container {\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    outline: none;\n    box-shadow: none;\n    border: none;\n    border-bottom: 1px solid #ced4da;\n    border-radius: 0;\n    box-sizing: content-box;\n    background-color: transparent;\n}\n\n:host /deep/ .autocomplete-container .input-container input {\n    padding: 0px !important;\n}"}}]);